@model FaceApp.Models.ViewModels.AttendanceListViewModel
@{
    ViewData["Title"] = "AttendanceReport";
    Layout = "~/Views/Shared/_Layout.cshtml";

    if (!ViewData.ModelState.IsValid)
    {
        <script>
            $(document).ready(function () {
                ShowModelpopup()
            });
        </script>
    }
}

@using (Html.BeginForm(new { enctype = "multipart/form-data", id = "myAttendanceReportform", autocomplete = "off", role = "form" }))
{

    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.SortColumn)
    @Html.HiddenFor(m => m.SortOrder)
    @Html.HiddenFor(m => m.PageSize)
    @Html.HiddenFor(m => m.PageIndex)

    @*<div class="contentSection">*@
    <div class="pageTitle_wrap">
        <h6>Attendance Report</h6>
    </div>
    <div class="row">

        <div class="col-md-3">
            <label class="control-label" for="ReportType">Report Type</label>
            <span style="color:#e85347;"> * </span>
            @Html.DropDownListFor(m => m.ReportType, (System.Collections.Generic.IEnumerable<SelectListItem>)Model.ReportTypeList, "Select Report Type", new { @class = "form-control mr15" })
            <label id="ErrorReportType" class="error"></label>
        </div>


        <div class="col-md-3" id="divLocation" style="display:none">
            <label class="control-label" for="LocationId">Location Name</label>
            <span style="color:#e85347;"> * </span>
            @Html.DropDownListFor(m => m.LocationId, (System.Collections.Generic.IEnumerable<SelectListItem>)Model.LocationsList, "Select Location", new { @class = "form-control mr15" })
            <label id="ErrorLocation" class="error"></label>
        </div>


        <div class="col-sm-3 col-md-4 col-lg-3">
            <div class="form-group">
                <label class="control-label">Report Date</label>
                <span style="color:#e85347;"> * </span>
                <div class='input-group date datepicker'>
                    @Html.TextBoxFor(m => m.ReportDate, new { type = "text", @class = "form-control", @placeholder = "Select Report Date" })
                    <span class="input-group-addon">
                        <img src="~/images/calendar.png" />
                    </span>
                </div>
                <label id="ErrorReportDate" class="error"></label>
            </div>
        </div>

        <div class="col-sm-3">
            <div class="form-group" id="btnSearch" style="display:none">
                <button class="btn btn-lg btn-success mt15" type="button" id="btnLoadSearch">Search</button>
                <button class="btn btn-lg btn-success mt15" type="button" id="btnExport">Export</button>
            </div>
        </div>
    </div>

    <div class="formSection" id="divColourIndicate" style="display:none">
        <div class="d-flex justify_se pr20">
            <div>
                <div class="check_complete"></div>
                <label>Checked-In & Checked-Out Completed</label>
            </div>
            <div>
                <div class="checkin_missing"></div>
                <label>Checked-In but not Checked-Out</label>
            </div>
            <div>
                <div class="checkout_missing"></div>
                <label>Not Checked-In</label>
            </div>
        </div>
    </div>
    
    <div class="table-responsive" id="gridSection" style="display:none">
        <div id="grid" class="mb15"></div>
        @{ Html.RenderPartial("_PartialGridPagination"); }
    </div>




    <!-- Modal -->
    <div id="newService" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">There are some missing fields that are required to search</h4>
                </div>
                <div class="modal-body">
                    <div class="pageTitle_wrap">
                        <h6>Please review the below fields before search</h6>
                    </div>
                    <div class="formSection">
                        <div class="row">
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
}
<script>



	$(window).on('load', function () {

        $('.datepicker').datepicker('setEndDate', new Date());

		$("#ReportType").change(function () {
            $("#ErrorReportDate").text("")
            $("#ErrorLocation").text("")
			var ReportType = $("#ReportType").val();
            var gridSectionDiv = document.getElementById("gridSection");
            var divColourIndicate = document.getElementById("divColourIndicate");
            var divLocation = document.getElementById("divLocation");
            var btnSearch = document.getElementById("btnSearch");
            btnSearch.removeAttribute("style");
            gridSectionDiv.style.display = "none";
			if (ReportType == "Attendance Report") {
				$("#grid").jsGrid({
					//height: height,
					width: "100%",
					fields: GenerateFields(),
					paging: false,
					autoload: false,
					sorting: true,
					editing: false,
					inserting: false,
					resizing: true,
					data: []
                });

                divLocation.style.display = "none";
               // gridSectionDiv.removeAttribute("style");
                divColourIndicate.style.display = "none";
			}
            else if (ReportType == "Attendance Detail Report") {
                divLocation.removeAttribute("style");
				//GenerateConsolidatingFields();
                //gridSectionDiv.style.display = "none";
                //divColourIndicate.removeAttribute("style");
			}
            else {
                btnSearch.style.display = "none";
                divLocation.style.display = "none";
                divColourIndicate.style.display = "none";
				//gridSectionDiv.style.display = "none";
			}



        });

    });



    //var $ = jQuery.noConflict();
        //Js-Grid Loading Part
    $(document).ready(function () {



            $("#grid").jsGrid({
                //height: "51vh",
                width: "100%",

                //Data Manipulation
                sorting: true,
                paging: false,
                autoload: true,
                editing: false,
                inserting: false,
                resizing: true,
                selecting : false,
                editFields_forBatch: [],
                _editingRows_forBatch: [],
				footerrow: true,
				userDataOnFooter: true,
                //Data Manipulation
                controller: {
                    loadData: function (item) {
                        var pgstart = item != null && item.start != null ? item.start : 1;
                        var pgend = item != null && item.end != null ? item.end : $("#pageSize").val();
                        var sort = item != null && item.sortColumn != null ? item.sortColumn : 'ReportingYear';
                        var sortorder = item != null && item.sortOrder != null ? item.sortOrder : 'asc';
                        bindmodel("NoPost");

                        var Model = {
                            ReportType: $('#ReportType').val(),
                            ReportDate: $('#ReportDate').val(),
                            LocationId: $('#LocationId').val(),
                        }

                        var d = $.Deferred();
                        $.ajax({
                            type: "POST",
							url: '@Url.Action("GetAttendanceReportData", "Report")',
                            dataType: "json",
                            data: { "model": Model, "pagestart": pgstart, "pageend": pgend, sortColumn: sort, sortOrder: sortorder },
                            error: function (jqXHR) {
                                SignoutURL(jqXHR);
                            },
                        }).done(function (response) {
							if (response.message == "Error") {
                                window.location.href = ErrorPageUrl;
                            }
                            else {
                                $("#btnPrevious").prop('disabled', false);
                                $("#btnNext").prop('disabled', false);
                                var pagesize = $("#pageSize").val();
                                pageend = response.pageEnd;
                                pagestart = response.pageStart;
                                totalRecords = response.TotalRecords;
                                inputChange = false;

                                $("#PageRange")[0].innerText = "Showing Records: " + (totalRecords == 0 ? totalRecords : parseInt(pagestart)) + " - " + (pageend > totalRecords ? totalRecords : pageend) + " of " + totalRecords;
                                if (response.response.length > 0) {
                                    if (response.pageStart == 1 && response.TotalRecords != 1 && pagesize <= response.TotalRecords) {
                                        gTotalRecords = response.TotalRecords;
                                        $("#btnPrevious").prop('disabled', 'disabled');
                                        $("#btnNext").removeAttr('style');
                                    }
                                    if (response.pageStart > 1 && response.pageEnd <= response.TotalRecords) {
                                        gTotalRecords = response.TotalRecords;
                                        $("#btnNext").removeAttr('style');
                                        $("#btnPrevious").removeAttr('style');
                                    }
                                    if (response.TotalRecords != 1 && pagesize <= response.TotalRecords && response.pageEnd >= response.TotalRecords) {
                                        gTotalRecords = response.TotalRecords;
                                        $("#btnNext").prop('disabled', 'disabled');
                                        $("#btnPrevious").removeAttr('style');
                                    }
                                    if (response.pageEnd >= response.TotalRecords && pagesize >= response.TotalRecords) {
                                        $('#btnPrevious').prop('disabled', 'disabled');
                                        $("#btnNext").prop('disabled', 'disabled');
                                    }
                                }
                                else {
                                    $('#btnPrevious').prop('disabled', 'disabled');
                                    $("#btnNext").prop('disabled', 'disabled');
                                }
                            }

							d.resolve(response.response);
                        });

                        return d.promise();
                    }
                },
                onDataLoaded: function () {

					var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
					var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
						return new bootstrap.Tooltip(tooltipTriggerEl)
					});

					$('.jsgrid-load-shader').css('display', 'none');
					$('.jsgrid-load-panel').css('display', 'none');
                },

				onRefreshed: function (args) {
					//
				},

                fields: GenerateFields(),

                _sortData: function () {
                    defaultSortColumn = this._sortField.name;
                    defaultSortOrder = this._sortField._grid._sortOrder;
                    bindmodel();
                },
            });
            //Pagination Declarations
            pagestart = 1;
            pageend = 0;
            totalRecords = 0;
            // Previous page Navigation
            $("#btnPrevious").click(function () {
                var pagesize = $("#pageSize").val();
                $("#btnPrevious").prop('disabled', 'disabled');
                pagestart = parseInt(parseInt(pagestart) - parseInt(pagesize));
                pageend = parseInt(parseInt(pageend) - parseInt(pagesize));
                bindmodel();
            });

            // Next page Navigation
            $("#btnNext").click(function () {
                $("#btnNext").prop('disabled', 'disabled');
                $('.jsgrid-load-shader').css('display', 'block');
                $('.jsgrid-load-panel').css('display', 'block');
                var pagesize = $("#pageSize").val();
                pagestart = parseInt(parseInt(pagestart) + parseInt(pagesize));
                pageend = parseInt(parseInt(pageend) + parseInt(pagesize));
                bindmodel();
            });

			$("#pageSize").on('change', function () {
                pagestart = parseInt(1);
                pageend = parseInt(this.value);
                bindmodel();
            }).focus(function () {
                previousPageSize = this.value;
            });

         $("#btnLoadSearch").click(async function () {
             $("#ErrorReportDate").text("");
             $("#ErrorLocation").text("");
             var gridSectionDiv = document.getElementById("gridSection");
             var divColourIndicate = document.getElementById("divColourIndicate");
            var ReportType = $("#ReportType").val();
			var ReportDate = $("#ReportDate").val();
             var LocationId = $("#LocationId").val();

            var isInvalidClick = false;

			if (ReportDate == null || ReportDate == "") {
                    isInvalidClick = true;
                 $("#ErrorReportDate").text("Please Select Date");
            }

            if (ReportType == "Attendance Detail Report") {

                if (LocationId == null || LocationId == "") {
                     isInvalidClick = true;
                    $("#ErrorLocation").text("Please Select Location");
                 }
            }


            if (!isInvalidClick) {
                //$("#grid").jsGrid({
                //    //height: height,
                //    width: "100%",
                //    fields: GenerateFields(),
                //    paging: false,
                //    autoload: false,
                //    sorting: true,
                //    editing: false,
                //    inserting: false,
                //    resizing: true,
                //});


                if (!ReportType.includes("Attendance Detail Report")) {
                    var height = "51vh";

                    $(".pager").removeAttr("style");

                    $("#grid").jsGrid({
                        //height: height,
                        width: "100%",
                        fields: GenerateFields(),
                        paging: false,
                        autoload: false,
                        sorting: true,
                        editing: false,
                        inserting: false,
                        resizing: true,
                        data:[]
                    });

                    //$('#grid').jsGrid('option', 'data', []);
                    gridSectionDiv.style.display = "block";

                    var pagesize = $("#pageSize").val();
                    pagestart = parseInt(1);
                    pageend = parseInt(pagesize);
                    bindmodel();
                }
                else {
                    divColourIndicate.style.display = "block";
                    GenerateAttendanceDetailsFields(ReportType);

                    //$('#grid').jsGrid('option', 'data', []);
                    gridSectionDiv.style.display = "block";
                }

            }
            else {
                return false;
            }
         });

        $("#btnExport").click(function () {
            $("#ErrorReportDate").text("");
            var Model = {
                ReportType: $('#ReportType').val(),
                ReportDate: $('#ReportDate').val(),
                LocationId: $('#LocationId').val(),
            }
              var d = $.Deferred();
            $.ajax({
                type: "POST",
                url: '@Url.Action("ExportToExcelAR", "Report")',
                dataType: "json",
                data:  { "model": Model },
            }).done(function (response) {
                if (response.errorMessage !== "") {
                    if (response.reportType == "Attendance Report") {
                        if ($('#ReportDate').val() == null || $('#ReportDate').val() == "") {
                            $("#ErrorReportDate").text("Please Select Date");
                        }
                    }
                    else if (response.reportType == "Attendance Detail Report") {
                        if ($('#ReportDate').val() == null || $('#ReportDate').val() == "") {
                            $("#ErrorReportDate").text("Please Select Date");
                        }
                        if ($('#LocationId').val() == null || $('#LocationId').val() == "") {
                            $("#ErrorLocation").text("Please Select Location");
                        }
                    }
                }
                else {
                    window.location.href = "@Url.RouteUrl(new {Controller = "Report", Action = "AttendanceDownload"})/?ReportDate=" + $('#ReportDate').val() + "&LocationId=" + $('#LocationId').val() + "&ReportType=" + $('#ReportType').val();
                }
            });
        });

     });

function ShowModelpopup() {
		$("#newService").modal()
    }

    function bindmodel(mode) {
		    model = @Html.Raw(Json.Serialize(Model));
			model.ReportDate = $('#ReportDate').val();
            if (mode != 'NoPost') { //To avoid loaddata function post.
                $('.jsgrid-load-shader').css('display', 'block');
                $('.jsgrid-load-panel').css('display', 'block');
                var paginations = { model: model, start: parseInt(pagestart), end: parseInt(pageend), sortColumn: defaultSortColumn, sortOrder: defaultSortOrder };
                $jgrid.jsGrid("loadData", paginations);
            }
    }


	function GenerateFields() {

		var ReportType = $('#ReportType').val();

		defaultSortColumn = "Name";

		//Tooltip logic
		if (ReportType != "") {
			$(".pager").removeAttr("style");
		    if (ReportType == "Attendance Report") {
                return [
					{ name: "FirstName", type: "text", title: "First Name", readOnly: true, width: 90 },
                    { name: "LastName", type: "text", title: "Last Name", readOnly: true, width: 90 },
                    { name: "LocationName", type: "text", title: "Location Name", readOnly: true, width: 90 },
                    { name: "ProgramName", type: "text", title: "Program Name", readOnly: true, width: 90 },
                    { name: "CalendarName", type: "text", title: "Calendar", readOnly: true, width: 100, sorting: false },
                    { name: "PersonID1", type: "text", title: "Person Id 1", readOnly: true, width: 90 },
                    { name: "AttendanceDate", type: "text", title: "Attendance Date", readOnly: true, width: 120, sorting: false },
                    { name: "ModeofTransportation", type: "text", title: "Mode of Transportation", readOnly: true, width: 140 },
                    { name: "CheckInTime", type: "text", title: "Time in", readOnly: true, width: 100, sorting: false},
                    { name: "CheckOutTime", type: "text", title: "Time out", readOnly: true, width: 100, sorting: false },
                    { name: "Duration", type: "text", title: "Duration", readOnly: true, width: 100, sorting: false},
				]
			}
		}
	}


    function GenerateAttendanceDetailsFields(ReportType) {
		var Fields = [];
                    var ReportDate = $('#ReportDate').val();
		            var LocationId = $('#LocationId').val();
						$.ajax({
                            type: "POST",
							url: '@Url.Action("GenerateAttendanceDetailGridFields", "Report")',
                            dataType: "json",
                            data: { "ReportDate": ReportDate, "LocationId" : LocationId },
                            error: function (jqXHR) {
                                SignoutURL(jqXHR);
                            },
                        }).done(function (response) {

                            Fields.push({ name: "PersonName", type: "text", title: "Person Name", readOnly: true, width: 198, sorting: true });
                            Fields.push({ name: "PersonID1", type: "text", title: "PersonID1", readOnly: true, width: 198, sorting: true });
							for(var i=0; i< response.FieldList.length;i++)
							{
								Fields.push({name: response.FieldList[i].name, type: "text", title: response.FieldList[i].title,
                                    itemTemplate: function (value, item) {
                                        if (value != null) {                                            
                                                if (value == 1) {
                                                    return '<tr><td class="text-center"><div class="checkin_missing"></div></td></tr>';
                                                } else if (value == 2) {
                                                    return '<tr><td class="text-center"><div class="check_complete"></div></td></tr>';
                                                } else {
													return '<tr><td class="text-center"><div class="checkout_missing"></div></td></tr>';
                                                }
                                            } else {
												return '<tr><td class="text-center"></td></tr>';
                                            }



                                    }, readOnly: true, width: 198 , sorting: false});
							}

							var Height ="300vh";

							if (ReportType == "Attendance Detail Report"){
								Height = "425vh";
							}

							$("#grid").jsGrid({
								width: "100%",
								fields: Fields,
								paging: false,
								autoload: false,
								sorting: true,
								editing: false,
								inserting: false,
								resizing: true,
								data:[]
                            });


                            //$(".pager").attr("style", "display:none");

                            var pagesize = $("#pageSize").val();
                            pagestart = parseInt(1);
                            pageend = parseInt(pagesize);
                            bindmodel();

						});
	}


</script>
