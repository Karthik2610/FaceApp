@model FaceApp.Models.ViewModels.ProgramViewModel
@{
	ViewData["Title"] = "Program";
	Layout = "~/Views/Shared/_Layout.cshtml";

	if (!ViewData.ModelState.IsValid)
	{
		<script>
			$(document).ready(function () {
				ShowModelpopup()
			});
		</script>
	}
}


@using (Html.BeginForm("Create", "Program", FormMethod.Post, new { enctype = "multipart/form-data", id = "myProgramform", autocomplete = "off", role = "form" }))
{
	@Html.HiddenFor(m => m.ProgramId)
	@*<div class="container nospace">
		<div class="flexWrapper">*@

	@*<div class="contentSection">*@
	<div class="pageTitle_wrap">
		<h6>Program Details</h6>
	</div>

	@*Form Section Start*@

	<div class="formSection">
		<div class="row">
			<div class="col-md-8">
				<div>
					@Html.LabelFor(m => m.Name, new { @class = "control-label" })
					<span style="color:#e85347;"> * </span>
					@Html.TextBoxFor(m => m.Name, new { placeholder = "Program Name", @class = "inputfile" })
				</div>
			</div>
			<div class="col-md-4">
				<div class="form-group mt30">
					<div class="checkbox checkbox-primary">
						@Html.CheckBoxFor(m => m.IsActive, new { @class = "form-check-input" })
						<label for="IsActive">
							Active
						</label>
					</div>
				</div>
			</div>

		</div>
		<div class="row">
			<div class="col-md-7">
				<div>
					<label class="control-label" for="programDesc">Program Description</label>
					@Html.TextBoxFor(m => m.Description, new { placeholder = "Program Description", @class = "inputfile" })
				</div>
			</div>
		</div>


		<div class="pageTitle_wrap">
			<h6>ID Assignments</h6>
		</div>
		<div class="row">
			<div class="col-md-6">
				<label class="control-label" for="ProgramID1">Program ID 1</label>
				@Html.TextBoxFor(m => m.ProgramID1, new { placeholder = "Program ID 1", @class = "inputfile" })
			</div>

		</div>
		<div class="row">
			<div class="col-md-6">
				<label class="control-label" for="ProgramID2">Program ID 2</label>
				@Html.TextBoxFor(m => m.ProgramID2, new { placeholder = "Program ID 2", @class = "inputfile" })
			</div>
		</div>
		<div class="row">
			<div class="col-md-6">
				<label class="control-label" for="ProgramID3">Program ID 3</label>
				@Html.TextBoxFor(m => m.ProgramID3, new { placeholder = "Program ID 3", @class = "inputfile" })
			</div>
			<div class="col-md-12 text-center">
				<hr>
			</div>
		</div>

		<div class="row">
			<div class="col-md-4">
				<div>
					<label class="control-label" for="GLAccountCode">GL Account Code</label>
					@Html.TextBoxFor(m => m.GLAccountCode, new { placeholder = "GL Account Code", @class = "inputfile" })
				</div>
			</div>

			<!-- <div class="col-md-12 text-center">
				<hr>
			</div> -->
		</div>




		<div class="row">

			<div class="col-md-12 pageTitle_wrap">
				<h6>Add Calendar</h6>
			</div>

			<div class="col-md-6">
				<div class="">
					<label class="control-label" for="PersonId1">Calendar</label>
					@*<span style="color:#e85347;"> * </span>*@

					<div class="d-flex">
						@Html.DropDownListFor(m => m.CalendarId, (System.Collections.Generic.IEnumerable<SelectListItem>)Model.CalendarList, "Select Calendar", new { @class = "form-control mr15" })

						<button class="btn btn-sm btn-success" type="button" onclick="AddCalendartoProgram()">Add</button>
					</div>
				</div>

				<div class=" mt10">
					<div class="grid_section">
						<div class="table-responsive">
							<table class="table table-bordered" id="tblCalendarList">
								<thead>
									<tr>
										<th style="display:none">
											ProgramCalendarDetailsId
										</th>
										<th style="display:none">
											ProgramId
										</th>
										<th style="display:none">
											CalendarId
										</th>
										<th style="display:none">
											CalendarName
										</th>
										<th> Calendar </th>
										<th width="10%"> Action </th>
									</tr>
								</thead>
								<tbody>
									@if (Model != null && Model.ProgramCalendarList != null)
									{
										for (int i = 0; i < Model.ProgramCalendarList.Count; i++)
										{
											<tr>
												<td style="display:none">
													@Model.ProgramCalendarList[i].ProgramCalendarDetailsId
												</td>
												<td style="display:none">
													@Model.ProgramCalendarList[i].ProgramId
												</td>
												<td style="display:none">
													@Model.ProgramCalendarList[i].CalendarId
												</td>
												<td style="display:none">
													@Model.ProgramCalendarList[i].CalendarName
												</td>
												<td>

													@Html.HiddenFor(m => Model.ProgramCalendarList[i].ProgramCalendarDetailsId)
													@Html.HiddenFor(m => Model.ProgramCalendarList[i].ProgramId)
													@Html.HiddenFor(m => Model.ProgramCalendarList[i].CalendarId)
													@Html.HiddenFor(m => Model.ProgramCalendarList[i].CalendarName)
													@Model.ProgramCalendarList[i].CalendarName
												</td>
												<td class="text-center"> <a href="javascript:;" onclick="CalendarListDelete(@Model.ProgramCalendarList[i].ProgramCalendarDetailsId,this)" class="text-primary action-icon" aria-label="Delete"><img src="~/images/status-out.png"></a></td>
											</tr>
										}
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>

			<div class="col-md-12">
			</div>


			<div class="col-md-12 text-center">
				<hr>
			</div>

		</div>




		<div class="col-md-12 text-center">
			<div class="btn-wrapper justify_sb">
				<a href="@Url.Action("Index", "Program")" class="btn btn-lg btn-secondary">Cancel</a>
				<button class="btn btn-lg btn-success" type="submit">Save</button>
			</div>
		</div>
	</div>

	@*Form Section End*@



	@*</div>*@


	<!-- Modal -->
	<div id="Program" class="modal fade" role="dialog">
		<div class="modal-dialog">

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">There are some missing fields that are required to save a form</h4>
				</div>
				<div class="modal-body">
					<div class="pageTitle_wrap">
						<h6>Please review the below fields before saving</h6>
					</div>
					<div class="formSection">
						<div class="row">
							@Html.ValidationSummary(false, "", new { @class = "text-danger" })
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				</div>
			</div>

		</div>
	</div>


	<!-- Modal -->
	<div id="ProgramCalendarError" class="modal fade" role="dialog">
		<div class="modal-dialog">

			<!-- Modal content-->
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal">&times;</button>
					<h4 class="modal-title">Please review the information below</h4>
				</div>
				<div class="modal-body">
					@*<div class="pageTitle_wrap">
						<h6>Please review the below fields before adding</h6>
					</div>*@
					<div class="formSection">
						<div class="row">
							<div>
								<label id="ErrorCalendar" class="error ml25" style="display:none"> Please Select Calendar </label>
							</div>
							
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				</div>
			</div>

		</div>
	</div>


}
@*</div>
	</div>*@
<script src="~/js/main.js"></script>
<script>

	function AddCalendartoProgram() {
		$("#ErrorCalendar").text("");
		document.getElementById("ErrorCalendar").style.display = "none";
		var CalendarId = $("#CalendarId").val();
		var CalendarIdSelect = document.getElementById("CalendarId");
		var CalendarName = CalendarIdSelect.options[CalendarIdSelect.selectedIndex].text;
		var Error = false;

		if (CalendarId == null || CalendarId == "") { document.getElementById("ErrorCalendar").removeAttribute("style"); $("#ErrorCalendar").text("Please Select Calendar"); Error = true; }
		else {
			var table = $("#tblCalendarList tr:gt(0)");
			$(table).each(function () {
				var this_row = $(this);
				var Id = $.trim(this_row.find('td:eq(2)').html());
				if (Id == CalendarId) {
					document.getElementById("ErrorCalendar").removeAttribute("style");
					$("#ErrorCalendar").text(CalendarName + " already added in the list");
					Error = true;
				}
			});
		}

		if (Error) { ShowProgramCalendarErrorpopup(); return false };

		var rowcount = $('#tblCalendarList tbody tr').length;

		if ($('#tblCalendarList tbody:first tr')[0] !=null && $('#tblCalendarList tbody:first tr')[0].innerText == 'No Data Found') {
			$("#tblCalendarList").find("tr:gt(0)").remove();
			rowcount = 0;
		}

		AddCalendarListTableRow(rowcount, 0, 0,CalendarId, CalendarName)

		$("#CalendarId").val("");
	}

	function AddCalendarListTableRow(count, ProgramCalendarDetailsId, ProgramId,CalendarId, CalendarName) {
		$('#tblCalendarList').append('<tr>'
			+ '<td style="display:none">' + ProgramCalendarDetailsId + '</td>'
			+ '<td style="display:none">' + ProgramId + '</td>'
			+ '<td style="display:none">' + CalendarId + '</td>'
			+ '<td style="display:none">' + CalendarName + '</td>'
			+ '<td><input type="hidden" id="ProgramCalendarList_' + count + '__ProgramCalendarDetailsId" name="ProgramCalendarList[' + count + '].ProgramCalendarDetailsId" value="' + ProgramCalendarDetailsId + '"/>'
			+ '<input type="hidden" id="ProgramCalendarList_' + count + '__ProgramId" name="ProgramCalendarList[' + count + '].ProgramId" value="' + ProgramId + '"/>'
			+ '<input type="hidden" id="ProgramCalendarList_' + count + '__CalendarId" name="ProgramCalendarList[' + count + '].CalendarId" value="' + CalendarId + '"/>'
			+ '<input type="hidden" id="ProgramCalendarList_' + count + '__CalendarName" name="ProgramCalendarList[' + count + '].CalendarName" value="' + CalendarName + '"/>'
			+ '' + CalendarName + '</td>'
            + '<td class="text-center"><a href="javascript:;" onclick="CalendarListDelete(' + ProgramCalendarDetailsId + ',this)" class="text-primary action-icon" aria-label="Delete"><img src="/images/status-out.png" ></a></td></tr>')
	}


    function CalendarListDelete(id, obj) {
		$("#ErrorCalendar").text("");
		document.getElementById("ErrorCalendar").style.display = "none";
        var IsAlredyMapping = false;
        if (id > 0) {

            $.ajax({
                type: "post",
                url: '@Url.Action("GetProgramCalendarSchedule", "Program")',
                dataType: "json",
                data: { "ProgramCalendarDetailsid": id },
                error: function (jqXHR) {
                    SignoutURL(jqXHR);
                },
            }).done(function (response) {
                debugger;
                if (response.message == "Error") {
                    window.location.href = '@Url.Action("Error", "Error")';
                }
                else {
                    if (response.IsProgramCalendarSchedule != null) {
                        IsAlredyMapping = response.IsProgramCalendarSchedule;
                        if (!IsAlredyMapping) {
                            DeleteItem(id, obj)
						} else {
							document.getElementById("ErrorCalendar").removeAttribute("style");
							$("#ErrorCalendar").text("Unable to remove this calendar, already assigned this calendar to person");
							ShowProgramCalendarErrorpopup();
                        }
                    }
                }
            });

        }
        else {
            DeleteItem(id, obj)
        }

	}

    function DeleteItem(id, obj) {
        $(obj).closest('tr').remove();
        var rowcount = $('#tblCalendarList tr').length - 1;
        if (rowcount > 0) {
            var count = 0;
            var table = $("#tblCalendarList tr:gt(0)");
            $("#tblCalendarList").find("tr:gt(0)").remove();
            $(table).each(function () {
                var this_row = $(this);
                var ProgramCalendarDetailsId = $.trim(this_row.find('td:eq(0)').html());
                var ProgramId = $.trim(this_row.find('td:eq(1)').html());
                var CalendarId = $.trim(this_row.find('td:eq(2)').html());
                var CalendarName = $.trim(this_row.find('td:eq(3)').html());
                AddCalendarListTableRow(count, ProgramCalendarDetailsId, ProgramId, CalendarId, CalendarName);
                count++;
            });
        }
    }

	function ShowModelpopup() {
		$("#Program").modal()
	}

	function ShowProgramCalendarErrorpopup() {
		$("#ProgramCalendarError").modal()
	}

</script>